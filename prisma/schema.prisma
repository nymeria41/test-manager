generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  email          String          @unique
  password       String
  name           String
  role           String          @default("user") // ex: 'user', 'admin'
  createdAt      DateTime        @default(now())
  testCases      TestCase[]
  testExecutions TestExecution[]

  createdTestSuite TestSuite[] @relation("CreatedByRelation")

  modifiedTestSuite TestSuite[] @relation("UpdatedByRelation")

  TestCase TestCase[] @relation("UpdatedTestCaseBy")

  TestExecution TestExecution[] @relation("UpdatedTestExecutionBy")
}

model TestSuite {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdById Int
  updatedById Int?

  createdBy User       @relation("CreatedByRelation", fields: [createdById], references: [id], onDelete: Cascade)
  updatedBy User?      @relation("UpdatedByRelation", fields: [updatedById], references: [id], onDelete: Cascade)
  testCases TestCase[]
}

model TestCase {
  id            Int             @id @default(autoincrement())
  name          String
  description   String
  creatorId     Int
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  application   String
  estimatedTime Int
  imageUrls     String[]
  suiteId       Int
  creator       User            @relation(fields: [creatorId], references: [id], onDelete: Cascade)
  updatedById   Int?
  updatedBy     User?           @relation("UpdatedTestCaseBy", fields: [updatedById], references: [id], onDelete: Cascade)
  suite         TestSuite       @relation(fields: [suiteId], references: [id])
  executions    TestExecution[]
}

model TestExecution {
  id          Int      @id @default(autoincrement())
  date        DateTime @default(now())
  ownerId     Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status      String
  environment String
  comment     String?
  imageUrls   String[]
  duration    Int
  testCaseId  Int
  owner       User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  updatedById Int?
  updatedBy   User?    @relation("UpdatedTestExecutionBy", fields: [updatedById], references: [id], onDelete: Cascade)
  testCase    TestCase @relation(fields: [testCaseId], references: [id], onDelete: Cascade)
}
